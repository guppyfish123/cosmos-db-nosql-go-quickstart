package main

import (
	"log"
	"net/http"
	"github.com/gorilla/mux"
	_ "cosmos-db-nosql-go-quickstart/docs" // docs is generated by Swag CLI, you have to import it.
	httpSwagger "github.com/swaggo/http-swagger/v2"
)

// @title       Certification Listings API
// @version     1.0
// @description Patrick's website API for Certification listings

// @host        container-app-ilm34snayo7qw.politeplant-0cb21c20.australiaeast.azurecontainerapps.io
// @BasePath    /certifications/api/v1

func main() {
	r := mux.NewRouter()
	r.Use(Logger)
	// Certification Endpoint
	s := r.PathPrefix("/certifications/api/v1").Subrouter()

	// List of paths for Certification Endpoint
	s.HandleFunc("/cert/{Key}/{Value}", getCert).Methods("GET")
	s.HandleFunc("/certs", getCerts).Methods("GET")

	r.PathPrefix("/swagger/").Handler(httpSwagger.Handler(
		httpSwagger.URL("/swagger/doc.json"), //The url pointing to API definition
		httpSwagger.DeepLinking(true),
		httpSwagger.DocExpansion("none"),
		httpSwagger.DomID("swagger-ui"),
	)).Methods(http.MethodGet)

	// Log errors if server fails to start
	err := http.ListenAndServe(":8000", r)
	if err != nil {
		log.Fatalf("Server failed to start: %v", err)
	}
}

// Logger
func Logger(next http.Handler) http.Handler {
	return http.HandlerFunc(func(res http.ResponseWriter, req *http.Request) {
		log.Printf("%s %s%s %s", req.Method, req.Host, req.URL, req.Proto)
		next.ServeHTTP(res, req)
	})
}